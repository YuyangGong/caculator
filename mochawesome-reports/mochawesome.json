{
  "stats": {
    "suites": 5,
    "tests": 32,
    "passes": 29,
    "pending": 0,
    "failures": 3,
    "start": "2017-02-27T12:21:44.282Z",
    "end": "2017-02-27T12:21:44.345Z",
    "duration": 63,
    "testsRegistered": 32,
    "passPercent": 90.6,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false,
    "passPercentClass": "success",
    "pendingPercentClass": "danger"
  },
  "suites": {
    "title": "",
    "suites": [
      {
        "title": "简单测试",
        "suites": [],
        "tests": [
          {
            "title": "加法",
            "fullTitle": "简单测试 加法",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "equal(ca('1+2'), 3);",
            "err": {},
            "isRoot": false,
            "uuid": "203e6d83-bc27-4c76-a00f-b85354a2ff2f",
            "parentUUID": "095c475f-38d5-48be-96d5-66e43c537ef6",
            "skipped": false
          },
          {
            "title": "减法",
            "fullTitle": "简单测试 减法",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "equal(ca('1-2'), -1);",
            "err": {},
            "isRoot": false,
            "uuid": "7d9d0414-9154-4d27-89e6-f24a0f43fce3",
            "parentUUID": "095c475f-38d5-48be-96d5-66e43c537ef6",
            "skipped": false
          },
          {
            "title": "乘法",
            "fullTitle": "简单测试 乘法",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "equal(ca('2*2'), 4);",
            "err": {},
            "isRoot": false,
            "uuid": "26fa2f55-a381-4c4e-96d8-0a1fb5b8e727",
            "parentUUID": "095c475f-38d5-48be-96d5-66e43c537ef6",
            "skipped": false
          },
          {
            "title": "除法",
            "fullTitle": "简单测试 除法",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "equal(ca('4/3'), +(4 / 3).toFixed(15));",
            "err": {},
            "isRoot": false,
            "uuid": "6f2836a4-e4db-480c-bbdb-93b3c97798d5",
            "parentUUID": "095c475f-38d5-48be-96d5-66e43c537ef6",
            "skipped": false
          },
          {
            "title": "乘方",
            "fullTitle": "简单测试 乘方",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "equal(ca('2^3'), 8);",
            "err": {},
            "isRoot": false,
            "uuid": "4902ccd2-2edf-42d1-b67b-053b634a21c9",
            "parentUUID": "095c475f-38d5-48be-96d5-66e43c537ef6",
            "skipped": false
          },
          {
            "title": "取余",
            "fullTitle": "简单测试 取余",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "equal(ca('3%2'), 1);",
            "err": {},
            "isRoot": false,
            "uuid": "ab6d725c-1d5b-4d32-9fbd-c080b7af5eb1",
            "parentUUID": "095c475f-38d5-48be-96d5-66e43c537ef6",
            "skipped": false
          },
          {
            "title": "绝对值运算",
            "fullTitle": "简单测试 绝对值运算",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "equal(ca('abs(-1)'), 1);",
            "err": {},
            "isRoot": false,
            "uuid": "99a10c99-41fc-496f-889a-426a89ceb4ea",
            "parentUUID": "095c475f-38d5-48be-96d5-66e43c537ef6",
            "skipped": false
          },
          {
            "title": "均值运算",
            "fullTitle": "简单测试 均值运算",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "equal(ca('avg(1,2)'), 1.5);",
            "err": {},
            "isRoot": false,
            "uuid": "7af48675-06f5-46ea-9712-8b350f14a8c0",
            "parentUUID": "095c475f-38d5-48be-96d5-66e43c537ef6",
            "skipped": false
          },
          {
            "title": "正弦运算",
            "fullTitle": "简单测试 正弦运算",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "equal(ca('sin(30)'), 0.5);",
            "err": {},
            "isRoot": false,
            "uuid": "d2ec1409-e30c-49ee-af04-6e2928010d71",
            "parentUUID": "095c475f-38d5-48be-96d5-66e43c537ef6",
            "skipped": false
          },
          {
            "title": "余弦运算",
            "fullTitle": "简单测试 余弦运算",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "equal(ca('cos(60)'), 0.5);",
            "err": {},
            "isRoot": false,
            "uuid": "673ee8a1-975d-4ec6-b9f3-98d07196cb5b",
            "parentUUID": "095c475f-38d5-48be-96d5-66e43c537ef6",
            "skipped": false
          },
          {
            "title": "正切运算",
            "fullTitle": "简单测试 正切运算",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "equal(ca('tan(45)'), 1);",
            "err": {},
            "isRoot": false,
            "uuid": "2ec04ae2-1c1c-434e-9a1b-af2af6fe4dd8",
            "parentUUID": "095c475f-38d5-48be-96d5-66e43c537ef6",
            "skipped": false
          },
          {
            "title": "余切运算",
            "fullTitle": "简单测试 余切运算",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "equal(ca('cot(45)'), 1);",
            "err": {},
            "isRoot": false,
            "uuid": "4a8d4055-249a-49f5-a21a-9c8f695dd8bc",
            "parentUUID": "095c475f-38d5-48be-96d5-66e43c537ef6",
            "skipped": false
          },
          {
            "title": "log底对数运算",
            "fullTitle": "简单测试 log底对数运算",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "equal(ca('log(100)'), 2);",
            "err": {},
            "isRoot": false,
            "uuid": "3b53e9d0-13a9-40fb-b3ed-12ad6f6c0b8c",
            "parentUUID": "095c475f-38d5-48be-96d5-66e43c537ef6",
            "skipped": false
          },
          {
            "title": "ln自然对数",
            "fullTitle": "简单测试 ln自然对数",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "equal(ca('ln(100)'), Math.log(100));",
            "err": {},
            "isRoot": false,
            "uuid": "4377d2c0-307e-4b36-993f-07726d5efa2a",
            "parentUUID": "095c475f-38d5-48be-96d5-66e43c537ef6",
            "skipped": false
          },
          {
            "title": "e自然常量",
            "fullTitle": "简单测试 e自然常量",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "equal(ca('e'), Math.E);",
            "err": {},
            "isRoot": false,
            "uuid": "b15958e5-7afc-4a23-b347-8e8dd6dbe469",
            "parentUUID": "095c475f-38d5-48be-96d5-66e43c537ef6",
            "skipped": false
          },
          {
            "title": "π自然常量",
            "fullTitle": "简单测试 π自然常量",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "equal(ca('π'), Math.PI);",
            "err": {},
            "isRoot": false,
            "uuid": "44ff4bfc-ce95-40e4-a572-cea725f1d957",
            "parentUUID": "095c475f-38d5-48be-96d5-66e43c537ef6",
            "skipped": false
          }
        ],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "\\test\\main.test.js",
        "uuid": "095c475f-38d5-48be-96d5-66e43c537ef6",
        "fullFile": "F:\\300\\git\\IfeTask\\caculator\\caculator\\test\\main.test.js",
        "passes": [
          {
            "title": "加法",
            "fullTitle": "简单测试 加法",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "equal(ca('1+2'), 3);",
            "err": {},
            "isRoot": false,
            "uuid": "203e6d83-bc27-4c76-a00f-b85354a2ff2f",
            "parentUUID": "095c475f-38d5-48be-96d5-66e43c537ef6",
            "skipped": false
          },
          {
            "title": "减法",
            "fullTitle": "简单测试 减法",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "equal(ca('1-2'), -1);",
            "err": {},
            "isRoot": false,
            "uuid": "7d9d0414-9154-4d27-89e6-f24a0f43fce3",
            "parentUUID": "095c475f-38d5-48be-96d5-66e43c537ef6",
            "skipped": false
          },
          {
            "title": "乘法",
            "fullTitle": "简单测试 乘法",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "equal(ca('2*2'), 4);",
            "err": {},
            "isRoot": false,
            "uuid": "26fa2f55-a381-4c4e-96d8-0a1fb5b8e727",
            "parentUUID": "095c475f-38d5-48be-96d5-66e43c537ef6",
            "skipped": false
          },
          {
            "title": "除法",
            "fullTitle": "简单测试 除法",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "equal(ca('4/3'), +(4 / 3).toFixed(15));",
            "err": {},
            "isRoot": false,
            "uuid": "6f2836a4-e4db-480c-bbdb-93b3c97798d5",
            "parentUUID": "095c475f-38d5-48be-96d5-66e43c537ef6",
            "skipped": false
          },
          {
            "title": "乘方",
            "fullTitle": "简单测试 乘方",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "equal(ca('2^3'), 8);",
            "err": {},
            "isRoot": false,
            "uuid": "4902ccd2-2edf-42d1-b67b-053b634a21c9",
            "parentUUID": "095c475f-38d5-48be-96d5-66e43c537ef6",
            "skipped": false
          },
          {
            "title": "取余",
            "fullTitle": "简单测试 取余",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "equal(ca('3%2'), 1);",
            "err": {},
            "isRoot": false,
            "uuid": "ab6d725c-1d5b-4d32-9fbd-c080b7af5eb1",
            "parentUUID": "095c475f-38d5-48be-96d5-66e43c537ef6",
            "skipped": false
          },
          {
            "title": "绝对值运算",
            "fullTitle": "简单测试 绝对值运算",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "equal(ca('abs(-1)'), 1);",
            "err": {},
            "isRoot": false,
            "uuid": "99a10c99-41fc-496f-889a-426a89ceb4ea",
            "parentUUID": "095c475f-38d5-48be-96d5-66e43c537ef6",
            "skipped": false
          },
          {
            "title": "均值运算",
            "fullTitle": "简单测试 均值运算",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "equal(ca('avg(1,2)'), 1.5);",
            "err": {},
            "isRoot": false,
            "uuid": "7af48675-06f5-46ea-9712-8b350f14a8c0",
            "parentUUID": "095c475f-38d5-48be-96d5-66e43c537ef6",
            "skipped": false
          },
          {
            "title": "正弦运算",
            "fullTitle": "简单测试 正弦运算",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "equal(ca('sin(30)'), 0.5);",
            "err": {},
            "isRoot": false,
            "uuid": "d2ec1409-e30c-49ee-af04-6e2928010d71",
            "parentUUID": "095c475f-38d5-48be-96d5-66e43c537ef6",
            "skipped": false
          },
          {
            "title": "余弦运算",
            "fullTitle": "简单测试 余弦运算",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "equal(ca('cos(60)'), 0.5);",
            "err": {},
            "isRoot": false,
            "uuid": "673ee8a1-975d-4ec6-b9f3-98d07196cb5b",
            "parentUUID": "095c475f-38d5-48be-96d5-66e43c537ef6",
            "skipped": false
          },
          {
            "title": "正切运算",
            "fullTitle": "简单测试 正切运算",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "equal(ca('tan(45)'), 1);",
            "err": {},
            "isRoot": false,
            "uuid": "2ec04ae2-1c1c-434e-9a1b-af2af6fe4dd8",
            "parentUUID": "095c475f-38d5-48be-96d5-66e43c537ef6",
            "skipped": false
          },
          {
            "title": "余切运算",
            "fullTitle": "简单测试 余切运算",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "equal(ca('cot(45)'), 1);",
            "err": {},
            "isRoot": false,
            "uuid": "4a8d4055-249a-49f5-a21a-9c8f695dd8bc",
            "parentUUID": "095c475f-38d5-48be-96d5-66e43c537ef6",
            "skipped": false
          },
          {
            "title": "log底对数运算",
            "fullTitle": "简单测试 log底对数运算",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "equal(ca('log(100)'), 2);",
            "err": {},
            "isRoot": false,
            "uuid": "3b53e9d0-13a9-40fb-b3ed-12ad6f6c0b8c",
            "parentUUID": "095c475f-38d5-48be-96d5-66e43c537ef6",
            "skipped": false
          },
          {
            "title": "ln自然对数",
            "fullTitle": "简单测试 ln自然对数",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "equal(ca('ln(100)'), Math.log(100));",
            "err": {},
            "isRoot": false,
            "uuid": "4377d2c0-307e-4b36-993f-07726d5efa2a",
            "parentUUID": "095c475f-38d5-48be-96d5-66e43c537ef6",
            "skipped": false
          },
          {
            "title": "e自然常量",
            "fullTitle": "简单测试 e自然常量",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "equal(ca('e'), Math.E);",
            "err": {},
            "isRoot": false,
            "uuid": "b15958e5-7afc-4a23-b347-8e8dd6dbe469",
            "parentUUID": "095c475f-38d5-48be-96d5-66e43c537ef6",
            "skipped": false
          },
          {
            "title": "π自然常量",
            "fullTitle": "简单测试 π自然常量",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "equal(ca('π'), Math.PI);",
            "err": {},
            "isRoot": false,
            "uuid": "44ff4bfc-ce95-40e4-a572-cea725f1d957",
            "parentUUID": "095c475f-38d5-48be-96d5-66e43c537ef6",
            "skipped": false
          }
        ],
        "failures": [],
        "skipped": [],
        "hasTests": true,
        "hasSuites": false,
        "totalTests": 16,
        "totalPasses": 16,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": true,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0,
        "rootEmpty": false
      },
      {
        "title": "复合测试",
        "suites": [],
        "tests": [
          {
            "title": "int型加法运算",
            "fullTitle": "复合测试 int型加法运算",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var num1, num2;\nfor (var i = 0; i < 10; i++) {\n\tnum1 = Math.random() * 1000 | 0;\n\tnum2 = Math.random() * 1000 | 0;\n\tequal(ca(' ' + num1 + ' + ' + num2 + ' '), +(num1 + num2).toFixed(15));\n}",
            "err": {},
            "isRoot": false,
            "uuid": "72e4966f-00dc-4050-a527-e46eddc0abb4",
            "parentUUID": "0676b27c-cfdd-42f5-83b0-1c0c60acbd03",
            "skipped": false
          },
          {
            "title": "float型加法运算",
            "fullTitle": "复合测试 float型加法运算",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var num1, num2;\nfor (var i = 0; i < 10; i++) {\n\tnum1 = Math.random();\n\tnum2 = Math.random();\n\tequal(ca(' ' + num1 + ' + ' + num2 + ' '), +(num1 + num2).toFixed(15));\n}",
            "err": {},
            "isRoot": false,
            "uuid": "2f7e7605-2330-4dcf-be82-cdc2648824d3",
            "parentUUID": "0676b27c-cfdd-42f5-83b0-1c0c60acbd03",
            "skipped": false
          },
          {
            "title": "float型与int形混合加法运算",
            "fullTitle": "复合测试 float型与int形混合加法运算",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var num1 = Math.random(),\n    num2 = Math.random() / Math.random() | 0;\nfor (var i = 0; i < 20; i++) {\n\tequal(ca(num1 + '+' + num2), +(num1 + num2).toFixed(15));\n}",
            "err": {},
            "isRoot": false,
            "uuid": "bc8416bc-7570-4a87-ac7d-2f8583320890",
            "parentUUID": "0676b27c-cfdd-42f5-83b0-1c0c60acbd03",
            "skipped": false
          },
          {
            "title": "连续整形加法运算",
            "fullTitle": "复合测试 连续整形加法运算",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var arr;\nfor (var i = 0; i < 10; i++) {\n\tarr = new Array(Math.random() * 10 | 0).fill(Math.random());\n}",
            "err": {},
            "isRoot": false,
            "uuid": "3e795bfd-b778-4706-af76-a8c42ee0dbf3",
            "parentUUID": "0676b27c-cfdd-42f5-83b0-1c0c60acbd03",
            "skipped": false
          },
          {
            "title": "加减乘除余综合运算",
            "fullTitle": "复合测试 加减乘除余综合运算",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "equal(ca('1+2*3-4/4'), 6);\nequal(ca('5*4-3+6*3%2'), 5 * 4 - 3 + 6 * 3 % 2);\nequal(ca('9.2*3%3-3*5*3-3-9+5/3'), 9.2 * 3 % 3 - 3 * 5 * 3 - 3 - 9 + 5 / 3);\nequal(ca('6*5/32*3-1*3+2*4%3'), 6 * 5 / 32 * 3 - 1 * 3 + 2 * 4 % 3);\nequal(ca('2.32*2.12/32.33+1'), +(2.32 * 2.12 / 32.33 + 1).toFixed(15));",
            "err": {},
            "isRoot": false,
            "uuid": "06924fad-60b5-43b1-90c8-ba3ed01ce33a",
            "parentUUID": "0676b27c-cfdd-42f5-83b0-1c0c60acbd03",
            "skipped": false
          },
          {
            "title": "加减乘除余幂综合运算",
            "fullTitle": "复合测试 加减乘除余幂综合运算",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "equal(ca('1^2+2*3-4/4'), 6);\nequal(ca('5*4-3+6*3%2^2'), 5 * 4 - 3 + 6 * 3 % Math.pow(2, 2));\nequal(ca('9.2*3%3-3*5*3^2-3-9+5/3'), 9.2 * 3 % 3 - 3 * 5 * Math.pow(3, 2) - 3 - 9 + 5 / 3);\nequal(ca('6*5/32*3-1^3*3+2*4%3'), 6 * 5 / 32 * 3 - 1 * 3 + 2 * 4 % 3);\nequal(ca('2.32^4*2.12/32.33+1'), +(Math.pow(2.32, 4) * 2.12 / 32.33 + 1).toFixed(15));",
            "err": {},
            "isRoot": false,
            "uuid": "a753842a-fa97-433d-8080-be6ef38fb0ae",
            "parentUUID": "0676b27c-cfdd-42f5-83b0-1c0c60acbd03",
            "skipped": false
          }
        ],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "\\test\\main.test.js",
        "uuid": "0676b27c-cfdd-42f5-83b0-1c0c60acbd03",
        "fullFile": "F:\\300\\git\\IfeTask\\caculator\\caculator\\test\\main.test.js",
        "passes": [
          {
            "title": "int型加法运算",
            "fullTitle": "复合测试 int型加法运算",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var num1, num2;\nfor (var i = 0; i < 10; i++) {\n\tnum1 = Math.random() * 1000 | 0;\n\tnum2 = Math.random() * 1000 | 0;\n\tequal(ca(' ' + num1 + ' + ' + num2 + ' '), +(num1 + num2).toFixed(15));\n}",
            "err": {},
            "isRoot": false,
            "uuid": "72e4966f-00dc-4050-a527-e46eddc0abb4",
            "parentUUID": "0676b27c-cfdd-42f5-83b0-1c0c60acbd03",
            "skipped": false
          },
          {
            "title": "float型加法运算",
            "fullTitle": "复合测试 float型加法运算",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var num1, num2;\nfor (var i = 0; i < 10; i++) {\n\tnum1 = Math.random();\n\tnum2 = Math.random();\n\tequal(ca(' ' + num1 + ' + ' + num2 + ' '), +(num1 + num2).toFixed(15));\n}",
            "err": {},
            "isRoot": false,
            "uuid": "2f7e7605-2330-4dcf-be82-cdc2648824d3",
            "parentUUID": "0676b27c-cfdd-42f5-83b0-1c0c60acbd03",
            "skipped": false
          },
          {
            "title": "float型与int形混合加法运算",
            "fullTitle": "复合测试 float型与int形混合加法运算",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var num1 = Math.random(),\n    num2 = Math.random() / Math.random() | 0;\nfor (var i = 0; i < 20; i++) {\n\tequal(ca(num1 + '+' + num2), +(num1 + num2).toFixed(15));\n}",
            "err": {},
            "isRoot": false,
            "uuid": "bc8416bc-7570-4a87-ac7d-2f8583320890",
            "parentUUID": "0676b27c-cfdd-42f5-83b0-1c0c60acbd03",
            "skipped": false
          },
          {
            "title": "连续整形加法运算",
            "fullTitle": "复合测试 连续整形加法运算",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var arr;\nfor (var i = 0; i < 10; i++) {\n\tarr = new Array(Math.random() * 10 | 0).fill(Math.random());\n}",
            "err": {},
            "isRoot": false,
            "uuid": "3e795bfd-b778-4706-af76-a8c42ee0dbf3",
            "parentUUID": "0676b27c-cfdd-42f5-83b0-1c0c60acbd03",
            "skipped": false
          },
          {
            "title": "加减乘除余综合运算",
            "fullTitle": "复合测试 加减乘除余综合运算",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "equal(ca('1+2*3-4/4'), 6);\nequal(ca('5*4-3+6*3%2'), 5 * 4 - 3 + 6 * 3 % 2);\nequal(ca('9.2*3%3-3*5*3-3-9+5/3'), 9.2 * 3 % 3 - 3 * 5 * 3 - 3 - 9 + 5 / 3);\nequal(ca('6*5/32*3-1*3+2*4%3'), 6 * 5 / 32 * 3 - 1 * 3 + 2 * 4 % 3);\nequal(ca('2.32*2.12/32.33+1'), +(2.32 * 2.12 / 32.33 + 1).toFixed(15));",
            "err": {},
            "isRoot": false,
            "uuid": "06924fad-60b5-43b1-90c8-ba3ed01ce33a",
            "parentUUID": "0676b27c-cfdd-42f5-83b0-1c0c60acbd03",
            "skipped": false
          },
          {
            "title": "加减乘除余幂综合运算",
            "fullTitle": "复合测试 加减乘除余幂综合运算",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "equal(ca('1^2+2*3-4/4'), 6);\nequal(ca('5*4-3+6*3%2^2'), 5 * 4 - 3 + 6 * 3 % Math.pow(2, 2));\nequal(ca('9.2*3%3-3*5*3^2-3-9+5/3'), 9.2 * 3 % 3 - 3 * 5 * Math.pow(3, 2) - 3 - 9 + 5 / 3);\nequal(ca('6*5/32*3-1^3*3+2*4%3'), 6 * 5 / 32 * 3 - 1 * 3 + 2 * 4 % 3);\nequal(ca('2.32^4*2.12/32.33+1'), +(Math.pow(2.32, 4) * 2.12 / 32.33 + 1).toFixed(15));",
            "err": {},
            "isRoot": false,
            "uuid": "a753842a-fa97-433d-8080-be6ef38fb0ae",
            "parentUUID": "0676b27c-cfdd-42f5-83b0-1c0c60acbd03",
            "skipped": false
          }
        ],
        "failures": [],
        "skipped": [],
        "hasTests": true,
        "hasSuites": false,
        "totalTests": 6,
        "totalPasses": 6,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": true,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0,
        "rootEmpty": false
      },
      {
        "title": "方法测试",
        "suites": [],
        "tests": [
          {
            "title": " 简单方法",
            "fullTitle": "方法测试  简单方法",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "equal(ca('pow(2,3) + pow(2,3)'), Math.pow(2, 3) + Math.pow(2, 3));",
            "err": {},
            "isRoot": false,
            "uuid": "22be28b4-969c-4193-b488-2c531af5b5a5",
            "parentUUID": "4c153ddd-944b-43d0-a6f6-dd12126c6aa9",
            "skipped": false
          },
          {
            "title": "嵌套方法",
            "fullTitle": "方法测试 嵌套方法",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "equal(ca('pow(pow(2,3),3)'), Math.pow(Math.pow(2, 3), 3));",
            "err": {},
            "isRoot": false,
            "uuid": "36242405-f79c-4ad1-becd-44a4debc4e39",
            "parentUUID": "4c153ddd-944b-43d0-a6f6-dd12126c6aa9",
            "skipped": false
          }
        ],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "\\test\\main.test.js",
        "uuid": "4c153ddd-944b-43d0-a6f6-dd12126c6aa9",
        "fullFile": "F:\\300\\git\\IfeTask\\caculator\\caculator\\test\\main.test.js",
        "passes": [
          {
            "title": " 简单方法",
            "fullTitle": "方法测试  简单方法",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "equal(ca('pow(2,3) + pow(2,3)'), Math.pow(2, 3) + Math.pow(2, 3));",
            "err": {},
            "isRoot": false,
            "uuid": "22be28b4-969c-4193-b488-2c531af5b5a5",
            "parentUUID": "4c153ddd-944b-43d0-a6f6-dd12126c6aa9",
            "skipped": false
          },
          {
            "title": "嵌套方法",
            "fullTitle": "方法测试 嵌套方法",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "equal(ca('pow(pow(2,3),3)'), Math.pow(Math.pow(2, 3), 3));",
            "err": {},
            "isRoot": false,
            "uuid": "36242405-f79c-4ad1-becd-44a4debc4e39",
            "parentUUID": "4c153ddd-944b-43d0-a6f6-dd12126c6aa9",
            "skipped": false
          }
        ],
        "failures": [],
        "skipped": [],
        "hasTests": true,
        "hasSuites": false,
        "totalTests": 2,
        "totalPasses": 2,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": true,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0,
        "rootEmpty": false
      },
      {
        "title": "边界情况测试",
        "suites": [],
        "tests": [
          {
            "title": "float型精度丢失",
            "fullTitle": "边界情况测试 float型精度丢失",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "equal(ca('0.1+0.2'), 0.3);",
            "err": {},
            "isRoot": false,
            "uuid": "1cf9011e-5844-42fa-892e-e68b42c839a3",
            "parentUUID": "56e084b1-5bca-40b7-8d63-ad06a7995c88",
            "skipped": false
          },
          {
            "title": "空格不影响运算",
            "fullTitle": "边界情况测试 空格不影响运算",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "equal(ca('  0.1   +   0.5   '), 0.6);",
            "err": {},
            "isRoot": false,
            "uuid": "4cf36706-e80c-497f-bf1e-8e2da937e386",
            "parentUUID": "56e084b1-5bca-40b7-8d63-ad06a7995c88",
            "skipped": false
          },
          {
            "title": "连续幂运算",
            "fullTitle": "边界情况测试 连续幂运算",
            "timedOut": false,
            "duration": 0,
            "state": "failed",
            "pass": false,
            "fail": true,
            "pending": false,
            "code": "equal(ca('2^3^4'), Math.pow(Math.pow(2, 3), 4));",
            "err": {
              "name": "AssertionError",
              "actual": "错误的使用: ^幂运算符",
              "expected": 4096,
              "operator": "===",
              "message": "'错误的使用: ^幂运算符' === 4096",
              "generatedMessage": true,
              "estack": "AssertionError: '错误的使用: ^幂运算符' === 4096\n    at Context.<anonymous> (F:/300/git/IfeTask/caculator/caculator/test/main.test.js:121:3)"
            },
            "isRoot": false,
            "uuid": "46327587-d15f-47e9-b29f-399bba9ac85b",
            "parentUUID": "56e084b1-5bca-40b7-8d63-ad06a7995c88",
            "skipped": false
          },
          {
            "title": "嵌套幂运算",
            "fullTitle": "边界情况测试 嵌套幂运算",
            "timedOut": false,
            "duration": 0,
            "state": "failed",
            "pass": false,
            "fail": true,
            "pending": false,
            "code": "equal(ca('(2+1)^(3-1)^4'), Math.pow(Math.pow(2 + 1, 3 - 1), 4));",
            "err": {
              "name": "AssertionError",
              "actual": "错误的使用: ^幂运算符",
              "expected": 6561,
              "operator": "===",
              "message": "'错误的使用: ^幂运算符' === 6561",
              "generatedMessage": true,
              "estack": "AssertionError: '错误的使用: ^幂运算符' === 6561\n    at Context.<anonymous> (F:/300/git/IfeTask/caculator/caculator/test/main.test.js:124:3)"
            },
            "isRoot": false,
            "uuid": "2a4983f8-f68c-491a-880f-f79a72efd6ca",
            "parentUUID": "56e084b1-5bca-40b7-8d63-ad06a7995c88",
            "skipped": false
          }
        ],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "\\test\\main.test.js",
        "uuid": "56e084b1-5bca-40b7-8d63-ad06a7995c88",
        "fullFile": "F:\\300\\git\\IfeTask\\caculator\\caculator\\test\\main.test.js",
        "passes": [
          {
            "title": "float型精度丢失",
            "fullTitle": "边界情况测试 float型精度丢失",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "equal(ca('0.1+0.2'), 0.3);",
            "err": {},
            "isRoot": false,
            "uuid": "1cf9011e-5844-42fa-892e-e68b42c839a3",
            "parentUUID": "56e084b1-5bca-40b7-8d63-ad06a7995c88",
            "skipped": false
          },
          {
            "title": "空格不影响运算",
            "fullTitle": "边界情况测试 空格不影响运算",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "equal(ca('  0.1   +   0.5   '), 0.6);",
            "err": {},
            "isRoot": false,
            "uuid": "4cf36706-e80c-497f-bf1e-8e2da937e386",
            "parentUUID": "56e084b1-5bca-40b7-8d63-ad06a7995c88",
            "skipped": false
          }
        ],
        "failures": [
          {
            "title": "连续幂运算",
            "fullTitle": "边界情况测试 连续幂运算",
            "timedOut": false,
            "duration": 0,
            "state": "failed",
            "pass": false,
            "fail": true,
            "pending": false,
            "code": "equal(ca('2^3^4'), Math.pow(Math.pow(2, 3), 4));",
            "err": {
              "name": "AssertionError",
              "actual": "错误的使用: ^幂运算符",
              "expected": 4096,
              "operator": "===",
              "message": "'错误的使用: ^幂运算符' === 4096",
              "generatedMessage": true,
              "estack": "AssertionError: '错误的使用: ^幂运算符' === 4096\n    at Context.<anonymous> (F:/300/git/IfeTask/caculator/caculator/test/main.test.js:121:3)"
            },
            "isRoot": false,
            "uuid": "46327587-d15f-47e9-b29f-399bba9ac85b",
            "parentUUID": "56e084b1-5bca-40b7-8d63-ad06a7995c88",
            "skipped": false
          },
          {
            "title": "嵌套幂运算",
            "fullTitle": "边界情况测试 嵌套幂运算",
            "timedOut": false,
            "duration": 0,
            "state": "failed",
            "pass": false,
            "fail": true,
            "pending": false,
            "code": "equal(ca('(2+1)^(3-1)^4'), Math.pow(Math.pow(2 + 1, 3 - 1), 4));",
            "err": {
              "name": "AssertionError",
              "actual": "错误的使用: ^幂运算符",
              "expected": 6561,
              "operator": "===",
              "message": "'错误的使用: ^幂运算符' === 6561",
              "generatedMessage": true,
              "estack": "AssertionError: '错误的使用: ^幂运算符' === 6561\n    at Context.<anonymous> (F:/300/git/IfeTask/caculator/caculator/test/main.test.js:124:3)"
            },
            "isRoot": false,
            "uuid": "2a4983f8-f68c-491a-880f-f79a72efd6ca",
            "parentUUID": "56e084b1-5bca-40b7-8d63-ad06a7995c88",
            "skipped": false
          }
        ],
        "skipped": [],
        "hasTests": true,
        "hasSuites": false,
        "totalTests": 4,
        "totalPasses": 2,
        "totalFailures": 2,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": true,
        "hasFailures": true,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0,
        "rootEmpty": false
      },
      {
        "title": "不合法情况测试",
        "suites": [],
        "tests": [
          {
            "title": "输入包含非法字符",
            "fullTitle": "不合法情况测试 输入包含非法字符",
            "timedOut": false,
            "duration": 0,
            "state": "failed",
            "pass": false,
            "fail": true,
            "pending": false,
            "code": "equal(_typeof(ca(':1+1')), 'string');\nequal(_typeof(ca('1~1')), 'string');\nequal(_typeof(ca('/')), 'string');\nequal(_typeof(ca('[1+1')), 'string');\nequal(_typeof(ca('[1+1]]')), 'string');\nequal(_typeof(ca('1|1')), 'string');\nequal(_typeof(ca('1++1')), 'string');\nequal(_typeof(ca('1--')), 'string');\nequal(_typeof(ca('1++')), 'string');\nequal(_typeof(ca('1 2 3')), 'string');",
            "err": {
              "name": "AssertionError",
              "actual": "number",
              "expected": "string",
              "operator": "===",
              "message": "'number' === 'string'",
              "generatedMessage": true,
              "estack": "AssertionError: 'number' === 'string'\n    at Context.<anonymous> (F:/300/git/IfeTask/caculator/caculator/test/main.test.js:138:3)",
              "diff": "- number\n+ string\n"
            },
            "isRoot": false,
            "uuid": "0191176b-9196-451b-ad2d-46ee591cfe80",
            "parentUUID": "b9b9ef40-25cf-465c-a446-3cb563a7d02e",
            "skipped": false
          },
          {
            "title": "输入包含不存在的方法或常量",
            "fullTitle": "不合法情况测试 输入包含不存在的方法或常量",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "equal(_typeof(ca('a')), 'string');\nequal(_typeof(ca('method()')), 'string');\nequal(_typeof(ca('test')), 'string');\nequal(_typeof(ca('e()')), 'string');\nequal(_typeof(ca('mmm')), 'string');",
            "err": {},
            "isRoot": false,
            "uuid": "cc316769-5d35-46a5-a571-bfb2a65631d8",
            "parentUUID": "b9b9ef40-25cf-465c-a446-3cb563a7d02e",
            "skipped": false
          },
          {
            "title": "常量错误的当方法使用",
            "fullTitle": "不合法情况测试 常量错误的当方法使用",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "equal(_typeof(ca('e()')), 'string');\nequal(_typeof(ca('π()')), 'string');",
            "err": {},
            "isRoot": false,
            "uuid": "ef0ddd94-edf3-4475-95ba-a3efa79edba1",
            "parentUUID": "b9b9ef40-25cf-465c-a446-3cb563a7d02e",
            "skipped": false
          },
          {
            "title": "方法错误的当常量使用",
            "fullTitle": "不合法情况测试 方法错误的当常量使用",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "equal(_typeof(ca('pow')), 'string');\nequal(_typeof(ca('sin')), 'string');",
            "err": {},
            "isRoot": false,
            "uuid": "720cddda-56fd-40c0-8913-c0f1b397b3c4",
            "parentUUID": "b9b9ef40-25cf-465c-a446-3cb563a7d02e",
            "skipped": false
          }
        ],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "\\test\\main.test.js",
        "uuid": "b9b9ef40-25cf-465c-a446-3cb563a7d02e",
        "fullFile": "F:\\300\\git\\IfeTask\\caculator\\caculator\\test\\main.test.js",
        "passes": [
          {
            "title": "输入包含不存在的方法或常量",
            "fullTitle": "不合法情况测试 输入包含不存在的方法或常量",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "equal(_typeof(ca('a')), 'string');\nequal(_typeof(ca('method()')), 'string');\nequal(_typeof(ca('test')), 'string');\nequal(_typeof(ca('e()')), 'string');\nequal(_typeof(ca('mmm')), 'string');",
            "err": {},
            "isRoot": false,
            "uuid": "cc316769-5d35-46a5-a571-bfb2a65631d8",
            "parentUUID": "b9b9ef40-25cf-465c-a446-3cb563a7d02e",
            "skipped": false
          },
          {
            "title": "常量错误的当方法使用",
            "fullTitle": "不合法情况测试 常量错误的当方法使用",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "equal(_typeof(ca('e()')), 'string');\nequal(_typeof(ca('π()')), 'string');",
            "err": {},
            "isRoot": false,
            "uuid": "ef0ddd94-edf3-4475-95ba-a3efa79edba1",
            "parentUUID": "b9b9ef40-25cf-465c-a446-3cb563a7d02e",
            "skipped": false
          },
          {
            "title": "方法错误的当常量使用",
            "fullTitle": "不合法情况测试 方法错误的当常量使用",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "equal(_typeof(ca('pow')), 'string');\nequal(_typeof(ca('sin')), 'string');",
            "err": {},
            "isRoot": false,
            "uuid": "720cddda-56fd-40c0-8913-c0f1b397b3c4",
            "parentUUID": "b9b9ef40-25cf-465c-a446-3cb563a7d02e",
            "skipped": false
          }
        ],
        "failures": [
          {
            "title": "输入包含非法字符",
            "fullTitle": "不合法情况测试 输入包含非法字符",
            "timedOut": false,
            "duration": 0,
            "state": "failed",
            "pass": false,
            "fail": true,
            "pending": false,
            "code": "equal(_typeof(ca(':1+1')), 'string');\nequal(_typeof(ca('1~1')), 'string');\nequal(_typeof(ca('/')), 'string');\nequal(_typeof(ca('[1+1')), 'string');\nequal(_typeof(ca('[1+1]]')), 'string');\nequal(_typeof(ca('1|1')), 'string');\nequal(_typeof(ca('1++1')), 'string');\nequal(_typeof(ca('1--')), 'string');\nequal(_typeof(ca('1++')), 'string');\nequal(_typeof(ca('1 2 3')), 'string');",
            "err": {
              "name": "AssertionError",
              "actual": "number",
              "expected": "string",
              "operator": "===",
              "message": "'number' === 'string'",
              "generatedMessage": true,
              "estack": "AssertionError: 'number' === 'string'\n    at Context.<anonymous> (F:/300/git/IfeTask/caculator/caculator/test/main.test.js:138:3)",
              "diff": "- number\n+ string\n"
            },
            "isRoot": false,
            "uuid": "0191176b-9196-451b-ad2d-46ee591cfe80",
            "parentUUID": "b9b9ef40-25cf-465c-a446-3cb563a7d02e",
            "skipped": false
          }
        ],
        "skipped": [],
        "hasTests": true,
        "hasSuites": false,
        "totalTests": 4,
        "totalPasses": 3,
        "totalFailures": 1,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": true,
        "hasFailures": true,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0,
        "rootEmpty": false
      }
    ],
    "tests": [],
    "pending": [],
    "root": true,
    "_timeout": 2000,
    "uuid": "e03d9f27-c4d8-405d-8846-62bc3a7d6c2a",
    "fullFile": "",
    "file": "",
    "passes": [],
    "failures": [],
    "skipped": [],
    "hasTests": false,
    "hasSuites": true,
    "totalTests": 0,
    "totalPasses": 0,
    "totalFailures": 0,
    "totalPending": 0,
    "totalSkipped": 0,
    "hasPasses": false,
    "hasFailures": false,
    "hasPending": false,
    "hasSkipped": false,
    "duration": 0,
    "rootEmpty": true
  },
  "allTests": [
    {
      "title": "加法",
      "fullTitle": "简单测试 加法",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "equal(ca('1+2'), 3);",
      "err": {},
      "isRoot": false,
      "uuid": "203e6d83-bc27-4c76-a00f-b85354a2ff2f",
      "parentUUID": "095c475f-38d5-48be-96d5-66e43c537ef6",
      "skipped": false
    },
    {
      "title": "减法",
      "fullTitle": "简单测试 减法",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "equal(ca('1-2'), -1);",
      "err": {},
      "isRoot": false,
      "uuid": "7d9d0414-9154-4d27-89e6-f24a0f43fce3",
      "parentUUID": "095c475f-38d5-48be-96d5-66e43c537ef6",
      "skipped": false
    },
    {
      "title": "乘法",
      "fullTitle": "简单测试 乘法",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "equal(ca('2*2'), 4);",
      "err": {},
      "isRoot": false,
      "uuid": "26fa2f55-a381-4c4e-96d8-0a1fb5b8e727",
      "parentUUID": "095c475f-38d5-48be-96d5-66e43c537ef6",
      "skipped": false
    },
    {
      "title": "除法",
      "fullTitle": "简单测试 除法",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "equal(ca('4/3'), +(4 / 3).toFixed(15));",
      "err": {},
      "isRoot": false,
      "uuid": "6f2836a4-e4db-480c-bbdb-93b3c97798d5",
      "parentUUID": "095c475f-38d5-48be-96d5-66e43c537ef6",
      "skipped": false
    },
    {
      "title": "乘方",
      "fullTitle": "简单测试 乘方",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "equal(ca('2^3'), 8);",
      "err": {},
      "isRoot": false,
      "uuid": "4902ccd2-2edf-42d1-b67b-053b634a21c9",
      "parentUUID": "095c475f-38d5-48be-96d5-66e43c537ef6",
      "skipped": false
    },
    {
      "title": "取余",
      "fullTitle": "简单测试 取余",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "equal(ca('3%2'), 1);",
      "err": {},
      "isRoot": false,
      "uuid": "ab6d725c-1d5b-4d32-9fbd-c080b7af5eb1",
      "parentUUID": "095c475f-38d5-48be-96d5-66e43c537ef6",
      "skipped": false
    },
    {
      "title": "绝对值运算",
      "fullTitle": "简单测试 绝对值运算",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "equal(ca('abs(-1)'), 1);",
      "err": {},
      "isRoot": false,
      "uuid": "99a10c99-41fc-496f-889a-426a89ceb4ea",
      "parentUUID": "095c475f-38d5-48be-96d5-66e43c537ef6",
      "skipped": false
    },
    {
      "title": "均值运算",
      "fullTitle": "简单测试 均值运算",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "equal(ca('avg(1,2)'), 1.5);",
      "err": {},
      "isRoot": false,
      "uuid": "7af48675-06f5-46ea-9712-8b350f14a8c0",
      "parentUUID": "095c475f-38d5-48be-96d5-66e43c537ef6",
      "skipped": false
    },
    {
      "title": "正弦运算",
      "fullTitle": "简单测试 正弦运算",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "equal(ca('sin(30)'), 0.5);",
      "err": {},
      "isRoot": false,
      "uuid": "d2ec1409-e30c-49ee-af04-6e2928010d71",
      "parentUUID": "095c475f-38d5-48be-96d5-66e43c537ef6",
      "skipped": false
    },
    {
      "title": "余弦运算",
      "fullTitle": "简单测试 余弦运算",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "equal(ca('cos(60)'), 0.5);",
      "err": {},
      "isRoot": false,
      "uuid": "673ee8a1-975d-4ec6-b9f3-98d07196cb5b",
      "parentUUID": "095c475f-38d5-48be-96d5-66e43c537ef6",
      "skipped": false
    },
    {
      "title": "正切运算",
      "fullTitle": "简单测试 正切运算",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "equal(ca('tan(45)'), 1);",
      "err": {},
      "isRoot": false,
      "uuid": "2ec04ae2-1c1c-434e-9a1b-af2af6fe4dd8",
      "parentUUID": "095c475f-38d5-48be-96d5-66e43c537ef6",
      "skipped": false
    },
    {
      "title": "余切运算",
      "fullTitle": "简单测试 余切运算",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "equal(ca('cot(45)'), 1);",
      "err": {},
      "isRoot": false,
      "uuid": "4a8d4055-249a-49f5-a21a-9c8f695dd8bc",
      "parentUUID": "095c475f-38d5-48be-96d5-66e43c537ef6",
      "skipped": false
    },
    {
      "title": "log底对数运算",
      "fullTitle": "简单测试 log底对数运算",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "equal(ca('log(100)'), 2);",
      "err": {},
      "isRoot": false,
      "uuid": "3b53e9d0-13a9-40fb-b3ed-12ad6f6c0b8c",
      "parentUUID": "095c475f-38d5-48be-96d5-66e43c537ef6",
      "skipped": false
    },
    {
      "title": "ln自然对数",
      "fullTitle": "简单测试 ln自然对数",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "equal(ca('ln(100)'), Math.log(100));",
      "err": {},
      "isRoot": false,
      "uuid": "4377d2c0-307e-4b36-993f-07726d5efa2a",
      "parentUUID": "095c475f-38d5-48be-96d5-66e43c537ef6",
      "skipped": false
    },
    {
      "title": "e自然常量",
      "fullTitle": "简单测试 e自然常量",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "equal(ca('e'), Math.E);",
      "err": {},
      "isRoot": false,
      "uuid": "b15958e5-7afc-4a23-b347-8e8dd6dbe469",
      "parentUUID": "095c475f-38d5-48be-96d5-66e43c537ef6",
      "skipped": false
    },
    {
      "title": "π自然常量",
      "fullTitle": "简单测试 π自然常量",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "equal(ca('π'), Math.PI);",
      "err": {},
      "isRoot": false,
      "uuid": "44ff4bfc-ce95-40e4-a572-cea725f1d957",
      "parentUUID": "095c475f-38d5-48be-96d5-66e43c537ef6",
      "skipped": false
    },
    {
      "title": "int型加法运算",
      "fullTitle": "复合测试 int型加法运算",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var num1, num2;\nfor (var i = 0; i < 10; i++) {\n\tnum1 = Math.random() * 1000 | 0;\n\tnum2 = Math.random() * 1000 | 0;\n\tequal(ca(' ' + num1 + ' + ' + num2 + ' '), +(num1 + num2).toFixed(15));\n}",
      "err": {},
      "isRoot": false,
      "uuid": "72e4966f-00dc-4050-a527-e46eddc0abb4",
      "parentUUID": "0676b27c-cfdd-42f5-83b0-1c0c60acbd03",
      "skipped": false
    },
    {
      "title": "float型加法运算",
      "fullTitle": "复合测试 float型加法运算",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var num1, num2;\nfor (var i = 0; i < 10; i++) {\n\tnum1 = Math.random();\n\tnum2 = Math.random();\n\tequal(ca(' ' + num1 + ' + ' + num2 + ' '), +(num1 + num2).toFixed(15));\n}",
      "err": {},
      "isRoot": false,
      "uuid": "2f7e7605-2330-4dcf-be82-cdc2648824d3",
      "parentUUID": "0676b27c-cfdd-42f5-83b0-1c0c60acbd03",
      "skipped": false
    },
    {
      "title": "float型与int形混合加法运算",
      "fullTitle": "复合测试 float型与int形混合加法运算",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var num1 = Math.random(),\n    num2 = Math.random() / Math.random() | 0;\nfor (var i = 0; i < 20; i++) {\n\tequal(ca(num1 + '+' + num2), +(num1 + num2).toFixed(15));\n}",
      "err": {},
      "isRoot": false,
      "uuid": "bc8416bc-7570-4a87-ac7d-2f8583320890",
      "parentUUID": "0676b27c-cfdd-42f5-83b0-1c0c60acbd03",
      "skipped": false
    },
    {
      "title": "连续整形加法运算",
      "fullTitle": "复合测试 连续整形加法运算",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var arr;\nfor (var i = 0; i < 10; i++) {\n\tarr = new Array(Math.random() * 10 | 0).fill(Math.random());\n}",
      "err": {},
      "isRoot": false,
      "uuid": "3e795bfd-b778-4706-af76-a8c42ee0dbf3",
      "parentUUID": "0676b27c-cfdd-42f5-83b0-1c0c60acbd03",
      "skipped": false
    },
    {
      "title": "加减乘除余综合运算",
      "fullTitle": "复合测试 加减乘除余综合运算",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "equal(ca('1+2*3-4/4'), 6);\nequal(ca('5*4-3+6*3%2'), 5 * 4 - 3 + 6 * 3 % 2);\nequal(ca('9.2*3%3-3*5*3-3-9+5/3'), 9.2 * 3 % 3 - 3 * 5 * 3 - 3 - 9 + 5 / 3);\nequal(ca('6*5/32*3-1*3+2*4%3'), 6 * 5 / 32 * 3 - 1 * 3 + 2 * 4 % 3);\nequal(ca('2.32*2.12/32.33+1'), +(2.32 * 2.12 / 32.33 + 1).toFixed(15));",
      "err": {},
      "isRoot": false,
      "uuid": "06924fad-60b5-43b1-90c8-ba3ed01ce33a",
      "parentUUID": "0676b27c-cfdd-42f5-83b0-1c0c60acbd03",
      "skipped": false
    },
    {
      "title": "加减乘除余幂综合运算",
      "fullTitle": "复合测试 加减乘除余幂综合运算",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "equal(ca('1^2+2*3-4/4'), 6);\nequal(ca('5*4-3+6*3%2^2'), 5 * 4 - 3 + 6 * 3 % Math.pow(2, 2));\nequal(ca('9.2*3%3-3*5*3^2-3-9+5/3'), 9.2 * 3 % 3 - 3 * 5 * Math.pow(3, 2) - 3 - 9 + 5 / 3);\nequal(ca('6*5/32*3-1^3*3+2*4%3'), 6 * 5 / 32 * 3 - 1 * 3 + 2 * 4 % 3);\nequal(ca('2.32^4*2.12/32.33+1'), +(Math.pow(2.32, 4) * 2.12 / 32.33 + 1).toFixed(15));",
      "err": {},
      "isRoot": false,
      "uuid": "a753842a-fa97-433d-8080-be6ef38fb0ae",
      "parentUUID": "0676b27c-cfdd-42f5-83b0-1c0c60acbd03",
      "skipped": false
    },
    {
      "title": " 简单方法",
      "fullTitle": "方法测试  简单方法",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "equal(ca('pow(2,3) + pow(2,3)'), Math.pow(2, 3) + Math.pow(2, 3));",
      "err": {},
      "isRoot": false,
      "uuid": "22be28b4-969c-4193-b488-2c531af5b5a5",
      "parentUUID": "4c153ddd-944b-43d0-a6f6-dd12126c6aa9",
      "skipped": false
    },
    {
      "title": "嵌套方法",
      "fullTitle": "方法测试 嵌套方法",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "equal(ca('pow(pow(2,3),3)'), Math.pow(Math.pow(2, 3), 3));",
      "err": {},
      "isRoot": false,
      "uuid": "36242405-f79c-4ad1-becd-44a4debc4e39",
      "parentUUID": "4c153ddd-944b-43d0-a6f6-dd12126c6aa9",
      "skipped": false
    },
    {
      "title": "float型精度丢失",
      "fullTitle": "边界情况测试 float型精度丢失",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "equal(ca('0.1+0.2'), 0.3);",
      "err": {},
      "isRoot": false,
      "uuid": "1cf9011e-5844-42fa-892e-e68b42c839a3",
      "parentUUID": "56e084b1-5bca-40b7-8d63-ad06a7995c88",
      "skipped": false
    },
    {
      "title": "空格不影响运算",
      "fullTitle": "边界情况测试 空格不影响运算",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "equal(ca('  0.1   +   0.5   '), 0.6);",
      "err": {},
      "isRoot": false,
      "uuid": "4cf36706-e80c-497f-bf1e-8e2da937e386",
      "parentUUID": "56e084b1-5bca-40b7-8d63-ad06a7995c88",
      "skipped": false
    },
    {
      "title": "连续幂运算",
      "fullTitle": "边界情况测试 连续幂运算",
      "timedOut": false,
      "duration": 0,
      "state": "failed",
      "pass": false,
      "fail": true,
      "pending": false,
      "code": "equal(ca('2^3^4'), Math.pow(Math.pow(2, 3), 4));",
      "err": {
        "name": "AssertionError",
        "actual": "错误的使用: ^幂运算符",
        "expected": 4096,
        "operator": "===",
        "message": "'错误的使用: ^幂运算符' === 4096",
        "generatedMessage": true,
        "estack": "AssertionError: '错误的使用: ^幂运算符' === 4096\n    at Context.<anonymous> (F:/300/git/IfeTask/caculator/caculator/test/main.test.js:121:3)"
      },
      "isRoot": false,
      "uuid": "46327587-d15f-47e9-b29f-399bba9ac85b",
      "parentUUID": "56e084b1-5bca-40b7-8d63-ad06a7995c88",
      "skipped": false
    },
    {
      "title": "嵌套幂运算",
      "fullTitle": "边界情况测试 嵌套幂运算",
      "timedOut": false,
      "duration": 0,
      "state": "failed",
      "pass": false,
      "fail": true,
      "pending": false,
      "code": "equal(ca('(2+1)^(3-1)^4'), Math.pow(Math.pow(2 + 1, 3 - 1), 4));",
      "err": {
        "name": "AssertionError",
        "actual": "错误的使用: ^幂运算符",
        "expected": 6561,
        "operator": "===",
        "message": "'错误的使用: ^幂运算符' === 6561",
        "generatedMessage": true,
        "estack": "AssertionError: '错误的使用: ^幂运算符' === 6561\n    at Context.<anonymous> (F:/300/git/IfeTask/caculator/caculator/test/main.test.js:124:3)"
      },
      "isRoot": false,
      "uuid": "2a4983f8-f68c-491a-880f-f79a72efd6ca",
      "parentUUID": "56e084b1-5bca-40b7-8d63-ad06a7995c88",
      "skipped": false
    },
    {
      "title": "输入包含非法字符",
      "fullTitle": "不合法情况测试 输入包含非法字符",
      "timedOut": false,
      "duration": 0,
      "state": "failed",
      "pass": false,
      "fail": true,
      "pending": false,
      "code": "equal(_typeof(ca(':1+1')), 'string');\nequal(_typeof(ca('1~1')), 'string');\nequal(_typeof(ca('/')), 'string');\nequal(_typeof(ca('[1+1')), 'string');\nequal(_typeof(ca('[1+1]]')), 'string');\nequal(_typeof(ca('1|1')), 'string');\nequal(_typeof(ca('1++1')), 'string');\nequal(_typeof(ca('1--')), 'string');\nequal(_typeof(ca('1++')), 'string');\nequal(_typeof(ca('1 2 3')), 'string');",
      "err": {
        "name": "AssertionError",
        "actual": "number",
        "expected": "string",
        "operator": "===",
        "message": "'number' === 'string'",
        "generatedMessage": true,
        "estack": "AssertionError: 'number' === 'string'\n    at Context.<anonymous> (F:/300/git/IfeTask/caculator/caculator/test/main.test.js:138:3)",
        "diff": "- number\n+ string\n"
      },
      "isRoot": false,
      "uuid": "0191176b-9196-451b-ad2d-46ee591cfe80",
      "parentUUID": "b9b9ef40-25cf-465c-a446-3cb563a7d02e",
      "skipped": false
    },
    {
      "title": "输入包含不存在的方法或常量",
      "fullTitle": "不合法情况测试 输入包含不存在的方法或常量",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "equal(_typeof(ca('a')), 'string');\nequal(_typeof(ca('method()')), 'string');\nequal(_typeof(ca('test')), 'string');\nequal(_typeof(ca('e()')), 'string');\nequal(_typeof(ca('mmm')), 'string');",
      "err": {},
      "isRoot": false,
      "uuid": "cc316769-5d35-46a5-a571-bfb2a65631d8",
      "parentUUID": "b9b9ef40-25cf-465c-a446-3cb563a7d02e",
      "skipped": false
    },
    {
      "title": "常量错误的当方法使用",
      "fullTitle": "不合法情况测试 常量错误的当方法使用",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "equal(_typeof(ca('e()')), 'string');\nequal(_typeof(ca('π()')), 'string');",
      "err": {},
      "isRoot": false,
      "uuid": "ef0ddd94-edf3-4475-95ba-a3efa79edba1",
      "parentUUID": "b9b9ef40-25cf-465c-a446-3cb563a7d02e",
      "skipped": false
    },
    {
      "title": "方法错误的当常量使用",
      "fullTitle": "不合法情况测试 方法错误的当常量使用",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "equal(_typeof(ca('pow')), 'string');\nequal(_typeof(ca('sin')), 'string');",
      "err": {},
      "isRoot": false,
      "uuid": "720cddda-56fd-40c0-8913-c0f1b397b3c4",
      "parentUUID": "b9b9ef40-25cf-465c-a446-3cb563a7d02e",
      "skipped": false
    }
  ],
  "allPending": [],
  "allPasses": [
    {
      "title": "加法",
      "fullTitle": "简单测试 加法",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "equal(ca('1+2'), 3);",
      "err": {},
      "isRoot": false,
      "uuid": "203e6d83-bc27-4c76-a00f-b85354a2ff2f",
      "parentUUID": "095c475f-38d5-48be-96d5-66e43c537ef6",
      "skipped": false
    },
    {
      "title": "减法",
      "fullTitle": "简单测试 减法",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "equal(ca('1-2'), -1);",
      "err": {},
      "isRoot": false,
      "uuid": "7d9d0414-9154-4d27-89e6-f24a0f43fce3",
      "parentUUID": "095c475f-38d5-48be-96d5-66e43c537ef6",
      "skipped": false
    },
    {
      "title": "乘法",
      "fullTitle": "简单测试 乘法",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "equal(ca('2*2'), 4);",
      "err": {},
      "isRoot": false,
      "uuid": "26fa2f55-a381-4c4e-96d8-0a1fb5b8e727",
      "parentUUID": "095c475f-38d5-48be-96d5-66e43c537ef6",
      "skipped": false
    },
    {
      "title": "除法",
      "fullTitle": "简单测试 除法",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "equal(ca('4/3'), +(4 / 3).toFixed(15));",
      "err": {},
      "isRoot": false,
      "uuid": "6f2836a4-e4db-480c-bbdb-93b3c97798d5",
      "parentUUID": "095c475f-38d5-48be-96d5-66e43c537ef6",
      "skipped": false
    },
    {
      "title": "乘方",
      "fullTitle": "简单测试 乘方",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "equal(ca('2^3'), 8);",
      "err": {},
      "isRoot": false,
      "uuid": "4902ccd2-2edf-42d1-b67b-053b634a21c9",
      "parentUUID": "095c475f-38d5-48be-96d5-66e43c537ef6",
      "skipped": false
    },
    {
      "title": "取余",
      "fullTitle": "简单测试 取余",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "equal(ca('3%2'), 1);",
      "err": {},
      "isRoot": false,
      "uuid": "ab6d725c-1d5b-4d32-9fbd-c080b7af5eb1",
      "parentUUID": "095c475f-38d5-48be-96d5-66e43c537ef6",
      "skipped": false
    },
    {
      "title": "绝对值运算",
      "fullTitle": "简单测试 绝对值运算",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "equal(ca('abs(-1)'), 1);",
      "err": {},
      "isRoot": false,
      "uuid": "99a10c99-41fc-496f-889a-426a89ceb4ea",
      "parentUUID": "095c475f-38d5-48be-96d5-66e43c537ef6",
      "skipped": false
    },
    {
      "title": "均值运算",
      "fullTitle": "简单测试 均值运算",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "equal(ca('avg(1,2)'), 1.5);",
      "err": {},
      "isRoot": false,
      "uuid": "7af48675-06f5-46ea-9712-8b350f14a8c0",
      "parentUUID": "095c475f-38d5-48be-96d5-66e43c537ef6",
      "skipped": false
    },
    {
      "title": "正弦运算",
      "fullTitle": "简单测试 正弦运算",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "equal(ca('sin(30)'), 0.5);",
      "err": {},
      "isRoot": false,
      "uuid": "d2ec1409-e30c-49ee-af04-6e2928010d71",
      "parentUUID": "095c475f-38d5-48be-96d5-66e43c537ef6",
      "skipped": false
    },
    {
      "title": "余弦运算",
      "fullTitle": "简单测试 余弦运算",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "equal(ca('cos(60)'), 0.5);",
      "err": {},
      "isRoot": false,
      "uuid": "673ee8a1-975d-4ec6-b9f3-98d07196cb5b",
      "parentUUID": "095c475f-38d5-48be-96d5-66e43c537ef6",
      "skipped": false
    },
    {
      "title": "正切运算",
      "fullTitle": "简单测试 正切运算",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "equal(ca('tan(45)'), 1);",
      "err": {},
      "isRoot": false,
      "uuid": "2ec04ae2-1c1c-434e-9a1b-af2af6fe4dd8",
      "parentUUID": "095c475f-38d5-48be-96d5-66e43c537ef6",
      "skipped": false
    },
    {
      "title": "余切运算",
      "fullTitle": "简单测试 余切运算",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "equal(ca('cot(45)'), 1);",
      "err": {},
      "isRoot": false,
      "uuid": "4a8d4055-249a-49f5-a21a-9c8f695dd8bc",
      "parentUUID": "095c475f-38d5-48be-96d5-66e43c537ef6",
      "skipped": false
    },
    {
      "title": "log底对数运算",
      "fullTitle": "简单测试 log底对数运算",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "equal(ca('log(100)'), 2);",
      "err": {},
      "isRoot": false,
      "uuid": "3b53e9d0-13a9-40fb-b3ed-12ad6f6c0b8c",
      "parentUUID": "095c475f-38d5-48be-96d5-66e43c537ef6",
      "skipped": false
    },
    {
      "title": "ln自然对数",
      "fullTitle": "简单测试 ln自然对数",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "equal(ca('ln(100)'), Math.log(100));",
      "err": {},
      "isRoot": false,
      "uuid": "4377d2c0-307e-4b36-993f-07726d5efa2a",
      "parentUUID": "095c475f-38d5-48be-96d5-66e43c537ef6",
      "skipped": false
    },
    {
      "title": "e自然常量",
      "fullTitle": "简单测试 e自然常量",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "equal(ca('e'), Math.E);",
      "err": {},
      "isRoot": false,
      "uuid": "b15958e5-7afc-4a23-b347-8e8dd6dbe469",
      "parentUUID": "095c475f-38d5-48be-96d5-66e43c537ef6",
      "skipped": false
    },
    {
      "title": "π自然常量",
      "fullTitle": "简单测试 π自然常量",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "equal(ca('π'), Math.PI);",
      "err": {},
      "isRoot": false,
      "uuid": "44ff4bfc-ce95-40e4-a572-cea725f1d957",
      "parentUUID": "095c475f-38d5-48be-96d5-66e43c537ef6",
      "skipped": false
    },
    {
      "title": "int型加法运算",
      "fullTitle": "复合测试 int型加法运算",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var num1, num2;\nfor (var i = 0; i < 10; i++) {\n\tnum1 = Math.random() * 1000 | 0;\n\tnum2 = Math.random() * 1000 | 0;\n\tequal(ca(' ' + num1 + ' + ' + num2 + ' '), +(num1 + num2).toFixed(15));\n}",
      "err": {},
      "isRoot": false,
      "uuid": "72e4966f-00dc-4050-a527-e46eddc0abb4",
      "parentUUID": "0676b27c-cfdd-42f5-83b0-1c0c60acbd03",
      "skipped": false
    },
    {
      "title": "float型加法运算",
      "fullTitle": "复合测试 float型加法运算",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var num1, num2;\nfor (var i = 0; i < 10; i++) {\n\tnum1 = Math.random();\n\tnum2 = Math.random();\n\tequal(ca(' ' + num1 + ' + ' + num2 + ' '), +(num1 + num2).toFixed(15));\n}",
      "err": {},
      "isRoot": false,
      "uuid": "2f7e7605-2330-4dcf-be82-cdc2648824d3",
      "parentUUID": "0676b27c-cfdd-42f5-83b0-1c0c60acbd03",
      "skipped": false
    },
    {
      "title": "float型与int形混合加法运算",
      "fullTitle": "复合测试 float型与int形混合加法运算",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var num1 = Math.random(),\n    num2 = Math.random() / Math.random() | 0;\nfor (var i = 0; i < 20; i++) {\n\tequal(ca(num1 + '+' + num2), +(num1 + num2).toFixed(15));\n}",
      "err": {},
      "isRoot": false,
      "uuid": "bc8416bc-7570-4a87-ac7d-2f8583320890",
      "parentUUID": "0676b27c-cfdd-42f5-83b0-1c0c60acbd03",
      "skipped": false
    },
    {
      "title": "连续整形加法运算",
      "fullTitle": "复合测试 连续整形加法运算",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var arr;\nfor (var i = 0; i < 10; i++) {\n\tarr = new Array(Math.random() * 10 | 0).fill(Math.random());\n}",
      "err": {},
      "isRoot": false,
      "uuid": "3e795bfd-b778-4706-af76-a8c42ee0dbf3",
      "parentUUID": "0676b27c-cfdd-42f5-83b0-1c0c60acbd03",
      "skipped": false
    },
    {
      "title": "加减乘除余综合运算",
      "fullTitle": "复合测试 加减乘除余综合运算",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "equal(ca('1+2*3-4/4'), 6);\nequal(ca('5*4-3+6*3%2'), 5 * 4 - 3 + 6 * 3 % 2);\nequal(ca('9.2*3%3-3*5*3-3-9+5/3'), 9.2 * 3 % 3 - 3 * 5 * 3 - 3 - 9 + 5 / 3);\nequal(ca('6*5/32*3-1*3+2*4%3'), 6 * 5 / 32 * 3 - 1 * 3 + 2 * 4 % 3);\nequal(ca('2.32*2.12/32.33+1'), +(2.32 * 2.12 / 32.33 + 1).toFixed(15));",
      "err": {},
      "isRoot": false,
      "uuid": "06924fad-60b5-43b1-90c8-ba3ed01ce33a",
      "parentUUID": "0676b27c-cfdd-42f5-83b0-1c0c60acbd03",
      "skipped": false
    },
    {
      "title": "加减乘除余幂综合运算",
      "fullTitle": "复合测试 加减乘除余幂综合运算",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "equal(ca('1^2+2*3-4/4'), 6);\nequal(ca('5*4-3+6*3%2^2'), 5 * 4 - 3 + 6 * 3 % Math.pow(2, 2));\nequal(ca('9.2*3%3-3*5*3^2-3-9+5/3'), 9.2 * 3 % 3 - 3 * 5 * Math.pow(3, 2) - 3 - 9 + 5 / 3);\nequal(ca('6*5/32*3-1^3*3+2*4%3'), 6 * 5 / 32 * 3 - 1 * 3 + 2 * 4 % 3);\nequal(ca('2.32^4*2.12/32.33+1'), +(Math.pow(2.32, 4) * 2.12 / 32.33 + 1).toFixed(15));",
      "err": {},
      "isRoot": false,
      "uuid": "a753842a-fa97-433d-8080-be6ef38fb0ae",
      "parentUUID": "0676b27c-cfdd-42f5-83b0-1c0c60acbd03",
      "skipped": false
    },
    {
      "title": " 简单方法",
      "fullTitle": "方法测试  简单方法",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "equal(ca('pow(2,3) + pow(2,3)'), Math.pow(2, 3) + Math.pow(2, 3));",
      "err": {},
      "isRoot": false,
      "uuid": "22be28b4-969c-4193-b488-2c531af5b5a5",
      "parentUUID": "4c153ddd-944b-43d0-a6f6-dd12126c6aa9",
      "skipped": false
    },
    {
      "title": "嵌套方法",
      "fullTitle": "方法测试 嵌套方法",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "equal(ca('pow(pow(2,3),3)'), Math.pow(Math.pow(2, 3), 3));",
      "err": {},
      "isRoot": false,
      "uuid": "36242405-f79c-4ad1-becd-44a4debc4e39",
      "parentUUID": "4c153ddd-944b-43d0-a6f6-dd12126c6aa9",
      "skipped": false
    },
    {
      "title": "float型精度丢失",
      "fullTitle": "边界情况测试 float型精度丢失",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "equal(ca('0.1+0.2'), 0.3);",
      "err": {},
      "isRoot": false,
      "uuid": "1cf9011e-5844-42fa-892e-e68b42c839a3",
      "parentUUID": "56e084b1-5bca-40b7-8d63-ad06a7995c88",
      "skipped": false
    },
    {
      "title": "空格不影响运算",
      "fullTitle": "边界情况测试 空格不影响运算",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "equal(ca('  0.1   +   0.5   '), 0.6);",
      "err": {},
      "isRoot": false,
      "uuid": "4cf36706-e80c-497f-bf1e-8e2da937e386",
      "parentUUID": "56e084b1-5bca-40b7-8d63-ad06a7995c88",
      "skipped": false
    },
    {
      "title": "输入包含不存在的方法或常量",
      "fullTitle": "不合法情况测试 输入包含不存在的方法或常量",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "equal(_typeof(ca('a')), 'string');\nequal(_typeof(ca('method()')), 'string');\nequal(_typeof(ca('test')), 'string');\nequal(_typeof(ca('e()')), 'string');\nequal(_typeof(ca('mmm')), 'string');",
      "err": {},
      "isRoot": false,
      "uuid": "cc316769-5d35-46a5-a571-bfb2a65631d8",
      "parentUUID": "b9b9ef40-25cf-465c-a446-3cb563a7d02e",
      "skipped": false
    },
    {
      "title": "常量错误的当方法使用",
      "fullTitle": "不合法情况测试 常量错误的当方法使用",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "equal(_typeof(ca('e()')), 'string');\nequal(_typeof(ca('π()')), 'string');",
      "err": {},
      "isRoot": false,
      "uuid": "ef0ddd94-edf3-4475-95ba-a3efa79edba1",
      "parentUUID": "b9b9ef40-25cf-465c-a446-3cb563a7d02e",
      "skipped": false
    },
    {
      "title": "方法错误的当常量使用",
      "fullTitle": "不合法情况测试 方法错误的当常量使用",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "equal(_typeof(ca('pow')), 'string');\nequal(_typeof(ca('sin')), 'string');",
      "err": {},
      "isRoot": false,
      "uuid": "720cddda-56fd-40c0-8913-c0f1b397b3c4",
      "parentUUID": "b9b9ef40-25cf-465c-a446-3cb563a7d02e",
      "skipped": false
    }
  ],
  "allFailures": [
    {
      "title": "连续幂运算",
      "fullTitle": "边界情况测试 连续幂运算",
      "timedOut": false,
      "duration": 0,
      "state": "failed",
      "pass": false,
      "fail": true,
      "pending": false,
      "code": "equal(ca('2^3^4'), Math.pow(Math.pow(2, 3), 4));",
      "err": {
        "name": "AssertionError",
        "actual": "错误的使用: ^幂运算符",
        "expected": 4096,
        "operator": "===",
        "message": "'错误的使用: ^幂运算符' === 4096",
        "generatedMessage": true,
        "estack": "AssertionError: '错误的使用: ^幂运算符' === 4096\n    at Context.<anonymous> (F:/300/git/IfeTask/caculator/caculator/test/main.test.js:121:3)"
      },
      "isRoot": false,
      "uuid": "46327587-d15f-47e9-b29f-399bba9ac85b",
      "parentUUID": "56e084b1-5bca-40b7-8d63-ad06a7995c88",
      "skipped": false
    },
    {
      "title": "嵌套幂运算",
      "fullTitle": "边界情况测试 嵌套幂运算",
      "timedOut": false,
      "duration": 0,
      "state": "failed",
      "pass": false,
      "fail": true,
      "pending": false,
      "code": "equal(ca('(2+1)^(3-1)^4'), Math.pow(Math.pow(2 + 1, 3 - 1), 4));",
      "err": {
        "name": "AssertionError",
        "actual": "错误的使用: ^幂运算符",
        "expected": 6561,
        "operator": "===",
        "message": "'错误的使用: ^幂运算符' === 6561",
        "generatedMessage": true,
        "estack": "AssertionError: '错误的使用: ^幂运算符' === 6561\n    at Context.<anonymous> (F:/300/git/IfeTask/caculator/caculator/test/main.test.js:124:3)"
      },
      "isRoot": false,
      "uuid": "2a4983f8-f68c-491a-880f-f79a72efd6ca",
      "parentUUID": "56e084b1-5bca-40b7-8d63-ad06a7995c88",
      "skipped": false
    },
    {
      "title": "输入包含非法字符",
      "fullTitle": "不合法情况测试 输入包含非法字符",
      "timedOut": false,
      "duration": 0,
      "state": "failed",
      "pass": false,
      "fail": true,
      "pending": false,
      "code": "equal(_typeof(ca(':1+1')), 'string');\nequal(_typeof(ca('1~1')), 'string');\nequal(_typeof(ca('/')), 'string');\nequal(_typeof(ca('[1+1')), 'string');\nequal(_typeof(ca('[1+1]]')), 'string');\nequal(_typeof(ca('1|1')), 'string');\nequal(_typeof(ca('1++1')), 'string');\nequal(_typeof(ca('1--')), 'string');\nequal(_typeof(ca('1++')), 'string');\nequal(_typeof(ca('1 2 3')), 'string');",
      "err": {
        "name": "AssertionError",
        "actual": "number",
        "expected": "string",
        "operator": "===",
        "message": "'number' === 'string'",
        "generatedMessage": true,
        "estack": "AssertionError: 'number' === 'string'\n    at Context.<anonymous> (F:/300/git/IfeTask/caculator/caculator/test/main.test.js:138:3)",
        "diff": "- number\n+ string\n"
      },
      "isRoot": false,
      "uuid": "0191176b-9196-451b-ad2d-46ee591cfe80",
      "parentUUID": "b9b9ef40-25cf-465c-a446-3cb563a7d02e",
      "skipped": false
    }
  ],
  "copyrightYear": 2017
}